from flask import Flask, request, render_template_string, session, redirect, url_for, make_response
import os
import hashlib

app = Flask(__name__)
app.secret_key = 'supersecretkey'  # Secret key for session management

# Извлечь адрес электронной почты из переменной окружения
email = os.getenv('USER', 'student_user')

# Сгенерировать флаг на основе электронной почты
def generate_flag(email):
    return hashlib.sha256(email.encode()).hexdigest()

# The secret flag
FLAG = generate_flag(email)

# Simple user database
users = {
    "user": "password"
}

@app.route('/')
def index():
    if 'username' in session:
        return redirect(url_for('profile'))
    return '''
    <html>
    <head>
        <link rel="stylesheet" type="text/css" href="/static/styles.css">
    </head>
    <body>
        <div class="container">
            <h1>Login Page</h1>
            <form action="/login" method="POST">
                <input type="text" name="username" placeholder="Enter username">
                <input type="password" name="password" placeholder="Enter password">
                <input type="submit" value="Login">
            </form>
        </div>
    </body>
    </html>
    '''

@app.route('/login', methods=['POST'])
def login():
    username = request.form['username']
    password = request.form['password']
    if username in users and users[username] == password:
        session['username'] = username
        return redirect(url_for('profile'))
    return 'Invalid credentials!'

@app.route('/profile', methods=['GET', 'POST'])
def profile():
    if 'username' not in session:
        return redirect(url_for('index'))

    username = session['username']

    if request.method == 'POST':
        comment = request.form['comment']
        if 'comments' not in session:
            session['comments'] = []
        session['comments'].append(comment)

    comments = session.get('comments', [])
    
    flag_message = ""
    # Check if the specific cookie is set
    if request.cookies.get('stolen_session'):
        flag_message = f"The secret flag is: {FLAG}"

    comments_html = ''.join([f'<li>{comment}</li>' for comment in comments])
    
    response = make_response(render_template_string('''
    <html>
    <head>
        <link rel="stylesheet" type="text/css" href="/static/styles.css">
    </head>
    <body>
        <div class="container">
            <h1>Profile Page</h1>
            <p>Welcome, {{username}}!</p>
            <form action="/profile" method="POST">
                <input type="text" name="comment" placeholder="Leave a comment">
                <input type="submit" value="Post">
            </form>
            <h2>Comments:</h2>
            <ul>
                ''' + comments_html + '''
            </ul>
            <p>{{flag_message}}</p>
            <a href="/logout">Logout</a>
        </div>
    </body>
    </html>
    ''', username=username, flag_message=flag_message))
    
    return response

@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('index'))

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)
