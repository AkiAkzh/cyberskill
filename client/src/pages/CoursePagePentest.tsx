import { FunctionComponent, useContext, useEffect, useState } from "react";
import NavBar from "../components/NavBar";
import FooterContainer from "../components/FooterContainer";
import { useLanguage } from '../context/LanguageContext';
import { SHA256 } from "crypto-js";
import "./CoursePage.css";
import { Context } from "..";

const translations = {
  EN: {
    tasks: "Tasks",
    submit_button: "Submit",
    correct_button: "Correct",
    hint_button: "Hint",
    answer0: "pentest",
    answer1: "vulnerabilities",
    answer2: "external",
    answer3: "internal",
    answer4: "social",
    answer10: "active",
    answer11: "passive",

    question0: "What is the name of the information system testing process to identify vulnerabilities?",
    question1: "What can be detected during a pentest?",
    question2: "Cybersecurity specialists analyze the vulnerabilities of the company's website, as well as open ports and network services accessible from the Internet. What kind of pentesting does this apply to?",
    question3: "The company is conducting testing to identify vulnerabilities related to internal servers and corporate applications. Testers work from inside the corporate network. What kind of pentesting does this apply to?",
    question4: "Testers send fake emails to company employees in order to obtain their credentials or other confidential information. What kind of pentesting does this apply to?",
    question5: "What tool is used to scan networks and discover hosts and services?",
    question6: "Which tool is used to test the security of web applications and allows you to perform various types of attacks?",
    question7: "You need to determine which devices are active on the subnet. Which Nmap option do you use?",
    question8: "You want to perform a deep scan of the device, including determining the OS and services. Which Nmap option do you use?",
    question9: "You need to perform a semi-open (SYN) port scan on the device. Which Nmap option will you enter?",
    question10: "You send HTTP requests to the web server to receive banners containing information about the version of the web server and the operating system. What research method do you use?",
    question11: "You analyze publicly available data about a company, including their websites and social media profiles, to gather information about its employees and infrastructure. What research method do you use?",
    question12: "Run a whois query for the domain astanahub.com and answer, when was the domain registered?",
    question13: "Run a whois query for astanahub.com and what email address is specified for the contact?",
    question14: "in the search, find the device with the IP address 104.26.10.78. Which is the first port open on this device?",
    question15_1: "Enter the command below into the terminal, then go to",
    question15_2: "in the browser, to launch the Docker container, where you must find the hidden flag.",
    question15_3: "The hidden flag is located on the flag page:",
    question16_1: "Enter the command below into the terminal, then go to",
    question16_2: "in the browser, to launch the Docker container, where you must find the hidden flag.",
    question16_3: "Here you have to apply SQL injection to find the hidden flag:",
    question17_links: "In these tasks, you will need a list of users and passwords to carry out a brute force attack. The lists can be found here:",
    passwords_links: "Passwords",
    users_links: "Usernames",
    question17_1: "Enter the command below into the terminal, then go to",
    question17_2: "in the browser to launch the Docker container, where you should find the hidden flag.",
    question17_3: "Here you have to apply a brute forcing password attack using Burp Suite to find the hidden flag:",
    question18_1: "Enter the command below into the terminal, then go to",
    question18_2: "in the browser to launch the Docker container, where you should find the hidden flag.",
    question18_3: "Here you have to apply a brute forcing user and password attack using Burp Suite to find the hidden flag:",
    

    hint15: "Hint: The hidden flag is in the 'flag' path.",
    hint16: "Hint: Use commenting ('--)",
    hint18: "Hint: Use the 'Cluster bomb' attack mode to iterate over several parameters at the same time.",
    hint19: "Hint: Try entering a code in the comment field that can interact with cookies on the page.",

    pentesting_fundamentals: "Pentesting Fundamentals",
    difficulty: "Difficulty:",
    easy: "Easy",
    category: "Category:",
    author: "Author:",
    course_page_description: "Start learning Pentesting Fundamentals course to master your information security skills.",
    intro_to_pentesting: "Introduction to pentesting",
    what_is_pentest: "What is Pentesting?",
    pentest: "Pentest",
    pentest_is: "the process of testing an information system in order to identify vulnerabilities that can be used by hackers to gain unauthorized access to data or system resources. During the pentest, both the technical aspects of the system and its security against social attacks are checked.",
    pentest_is_simulation: "Pentest - a simulation of an attack on an information system in order to assess its security level. It is carried out with the consent of the system owner and may include various hacking methods and techniques. The main purpose of the pentest is to identify vulnerabilities before they are discovered by attackers and provide recommendations for their elimination.",
    main_pentest_types: "The main types of pentests",
    internal_pentest: "The internal pentest is aimed at checking the system from the inside, as if the attack was carried out by an employee of the company or an attacker who gained access to the internal network. Such a test allows you to assess the security of internal resources, identify possible vulnerabilities in the corporate network, and also check how effectively employee access rights are controlled. Examples of test areas are internal servers and databases, enterprise applications and web services, protocols and network services.",
    external_pentest: "External pentest is aimed at checking the system from the outside, usually conducted from the Internet to assess the security of external resources and network perimeters. The purpose of the external pentest is to identify vulnerabilities that can be used by hackers to penetrate the system from the outside. Examples of test areas include websites and web applications, external servers and network devices, public IP addresses and open ports.",
    social_pentest: "Social pentest is aimed at checking the human factor, which includes social engineering methods to gain access to systems or confidential information. The social pentest helps to identify weaknesses in employee training and safety procedures, as well as raise awareness of social engineering techniques. Examples of tested areas: phishing attacks, pretexting (creating a false story to get information), physical access (an attempt to enter the office or the territory of the company).",
    pentesting_tools: "Pentesting tools",
    pentesting_tools_description: "Pentesting requires the use of various tools that help information security professionals find and exploit vulnerabilities in the system. These tools can be software applications, utilities, or scripts designed to perform specific tasks. It is important to understand that each tool has its own characteristics and is designed to solve certain tasks in the pentest process.",
    pentesting_main_tools: "The main tools used in pentesting include:",
    nmap_description: "a powerful tool for scanning networks and detecting hosts and services.",
    metasploit_description: "a framework for developing, testing and using exploits. It allows you to automate many pentest tasks, such as finding vulnerabilities and launching attacks.",
    wireshark_description: "a network traffic analyzer that allows you to intercept and examine data packets on the network. It can be used to identify suspicious activity and anomalies in network traffic.",
    burp_suite_description: "a web-application security testing tool that allows you to perform various types of attacks such as SQL injection and XSS.",
    john_the_ripper: "a password cracking tool. It is used to check the weakness of passwords by brute force or dictionary attack.",
    nmap_instrument: "Nmap: Network Scanning Tool",
    tools_description_summary: "Each of these tools provides its own unique capabilities, and their combined use allows you to get a comprehensive analysis of the security of the system.",
    nmap_tool: "Nmap is a powerful and flexible tool for scanning networks and detecting hosts and services. It can be used to detect open ports, identify running services, determine software versions and operating systems, and perform many other tasks related to network analysis.",
    nmap_install: "Nmap is available for various operating systems, including Windows, macOS and Linux:",
    nmap_commands: "Nmap commands",
    nmap_commands_list: "After installing Nmap, you can start using it by running some commands. These commands will help you get used to the tool and understand its main features.",
    nmap_h: "command displays background information and a complete list of options and parameters supported by Nmap.",
    nmap_sn: "sn (ping scan) option is used to identify active devices on the network. Nmap sends ICMP echo requests and waits for a response. This helps to identify devices that are connected to the network.",
    nmap_ss: "sS (SYN scan) option performs a semi-open port scan, sending SYN packets to the target device. This method is fast and stealthy, as it does not establish a full TCP connection.",
    nmap_A: "A (Aggressive scan) option performs a deep scan that includes detecting services and their versions, as well as determining the operating system and other characteristics of the target device.",
    scanning_and_collecting: "Scanning and collecting information",
    scanning_description: "Scanning the network and collecting information are the key steps of the pentest, which allow you to identify weaknesses in the system. The principles of network scanning include the use of various tools and techniques to identify active hosts, open ports, running services and software versions. The main purpose of the scan is to collect as much information about the target system as possible in order to identify potential vulnerabilities.",
    methods_of_collecting: "Information collection methods can be divided into two types: passive and active reconnaissance.",
    passive_recon: "Passive reconnaissance",
    passive_recon_description: "collecting information without direct interaction with the target system.  Passive research minimizes the risk of detection, as it does not leave traces on the target system.",
    passive_recon_examples: "Examples include analyzing public data, searching on social media, exploring websites, and using tools.",
    active_recon: "Active reconnaissance",
    active_recon_description: "enables direct interaction with the target system to obtain information. Active reconnaissance can be more effective, but also more risky, as it can be detected by security systems.",
    active_recon_examples: "Examples include scanning the network using tools such as Nmap, sending requests to the web server to receive banners with information about the server.",
    passive_recon_instruments: "Passive reconnaissance tools",
    whois_description: "protocol that is used to query the database for domain name registration. You can use it to get information about the domain owner, registration date, expiration date, registrars and contact information.",
    whois_command_list: "Whois provides a variety of commands to get information about domains and IP addresses. Here are some of them:",
    domain: "domain",
    whois_domain: "command returns information about the domain owner, registrar, registration date and expiration date, as well as contact information.",
    whois_v: "command requests more detailed information about the domain, including additional information about registrations and updates.",
    whois_ip: "command provides information about the organization that owns the IP address and contact information.",
    whois_h: "request domain information through the specified whois server. This command is useful if you need to get data through a specific registrar.",
    whois_grep: "the command requests information about the domain example.com and filters the output to show only the lines containing the word 'Registrar' (you can put any word).",
    whois_examples: "Example of using WHOIS",
    whois_example1: "Suppose you want to know information about a domain astanait.edu.kz . You are running",
    whois_example_result: "In the response, you will see information about the domain owner, registration date, expiration date and registrar's contact information.",
    shodan_description: "a search engine for devices connected to the Internet. Unlike traditional search engines such as Google, Scholar indexes IP addresses and ports, providing information about the types of connected devices, their location, the software used and potential vulnerabilities.",
    shodan_functions_list: "The main functions and features of Shodan",
    shodan_key_words: "Keyword search (for example, type 'apache' in the search box on the main page to find devices with this software).",
    shodan_IP: "Search by IP addresses",
    shodan_port: "Search by ports (for example, 'port:22' to find all devices with port 22 open).",
    sql_injections: "SQL injections",
    sql_injections_description: "SQL injections are one of the most common and dangerous types of attacks on web applications. This attack allows an attacker to execute arbitrary SQL queries in the application database, which can lead to leakage of confidential information, data modification, or even complete compromise of the system.",
    sql_injections_examples: "Examples of SQL injection",
    sql_injections_example1: "Example No. 1. Suppose we have a web login form with the fields 'username' and 'password'. A database query may look like this:",
    sql_injections_example1_2: "An attacker can enter admin'-- in the 'username' field and any text in the 'password' field. This is to change the query as follows:",
    sql_injections_example1_3: "Everything after -- will be ignored, and the request will become:",
    sql_injections_example1_4: "Thus, password verification is ignored, and the attacker will gain access to the 'admin' account.",
    sql_injections_example2: "Example No. 2. Let's assume that we have the same query to the database:",
    sql_injections_example2_2: "If the attacker enters admin' OR '1'='1 in the 'username' field and any password in the 'password' field, the request will become:",
    sql_injections_example2_3: "Since the condition '1'='1' is always true, the query will return all records from the users table, granting access to the attacker.",
    docker_description: "Docker provides an easy way to create isolated testing environments. Using ready-made containers, you can quickly deploy web applications with vulnerabilities for testing. Using Docker, you will be able to run an isolated environment where you will perform subsequent tasks.",
    docker_install: "Docker is pre-installed in Ubuntu 20.04 and later versions. It doesn't need to be installed. To make sure you have Docker installed or not, type in the terminal:",
    docker_install_link: "If Docker is installed correctly, you will see the message 'Hello from Docker!'. If Docker is not installed, you can install it by following the installation instructions:",
    authentication_vulnerabilities: "Authentication vulnerabilities",
    authentication_vulnerabilities_description: "Authentication vulnerabilities are among the most common and dangerous in web applications. Authentication attacks are aimed at gaining unauthorized access to user accounts or administrative panels. One of the common methods of attack is 'brute forcing'.",
    brute_force_desc: "an attack method in which an attacker sequentially iterates through all possible combinations of usernames and passwords until he finds the correct one. The effectiveness of brute forcing depends on the complexity of the password and the power of computing resources available to the attacker. Web applications with insufficiently strong passwords and without mechanisms to protect against multiple login attempts are particularly vulnerable to such attacks.",
    burp_suite_desc: "We have already mentioned Burp Suite, a comprehensive tool for testing the security of web applications. It includes many functions such as a proxy server for intercepting traffic, an attack execution module (Intruder) and a code analysis module (Repeater). You can install it on the official website:",
    burp_suite_func_list: "Main functions of Burp Suite:",
    proxy_desc: "Interception and modification of HTTP/HTTPS requests and responses between the browser and the server.",
    repeater_desc: "Resend and modify requests manually for more detailed analysis.",
    intruder_desc: "Automating attacks using various techniques, such as password brute force or SQL injection.",
    burp_suite_list_sum: "Using Burp Suite Intruder, you can easily automate the brute forcing process.",
    brute_forcing_in_burp_suite: "Brute Forcing in Burp Suite",
    brute_force_example_list: "For example, you want to carry out a brute forcing attack on a web application using Burp Suite:",
    brute_force_example_1: "First, you open the built-in browser in Burp Suite and navigate to the target web application.",
    brute_force_example_2: "Then you log in to the login page and intercept the HTTP request with your username and password in the Burp Proxy.",
    brute_force_example_3: "You send this request to Burp Repeater (right-click on the request and click on 'Send to Repeater') to test various parameters manually.",
    brute_force_example_4: "After that, you configure Burp Intruder (right-click on the request and select 'Send to Intruder') to automate brute forcing. Select the element (for example, the password field) that you want to sort through, and click the 'Add' button.",
    brute_force_example_5: "Then go to the Payloads tab, insert a list of passwords, begin the attack (the 'Start attack' button) and analyze the server responses to determine the correct combinations.",
    brute_force_answers_list: "The server responses that determine the success of the attack can be:",
    brute_force_answer_1: "HTTP statuses (successful login status is 200 (OK), while unsuccessful attempts return 401 (Unauthorized) or 403 (Forbidden))",
    brute_force_answer_2: "The length of the response (for example, the page after successful login may contain more data (personal account, welcome message)).",
    brute_force_answer_3: "The body of the response (check the content of the response for keywords ('Welcome', 'Dashboard') that may indicate a successful login).",
    brute_force_answer_4: "Redirects (successful login may result in redirection to another page (redirect from 302 Found), while unsuccessful login attempts remain on the same page).",
    xss: "Cross-site Scripting (XSS)",
    xss_desc: "type of web application vulnerability that allows attackers to inject malicious scripts into web pages, which are then executed in users' browsers. With XSS, an attacker can steal user data, change the displayed content, or perform other malicious actions.",
    xss_type_list: "There are several types of XSS attacks:",
    reflected_xss: "Reflected XSS: Occurs when a malicious script is reflected from a web server in response to a request that contains malicious code.",
    stored_xss: "Stored XSS: Occurs when a malicious script is saved on the server and displayed to all users who view the infected page.",
    dom_xss: "DOM-based XSS: Occurs when a vulnerability exists in the client part of the code, and not on the server. The malicious script modifies the DOM structure of the page, which leads to the execution of malicious code.",
    examples: "Examples",
    xss_example_1: "Example No. 1. Suppose we have a search form on a website that takes the query parameter from the URL and displays it on the results page without proper validation and escaping. An attacker can create a URL containing malicious JavaScript code, for example:",
    xss_example_1_2: "When clicking on this link, the script will be executed in the victim's browser, causing a window with the message 'XSS' to appear.",
    xss_example_2: "Example No. 2. Let's say there is a web application that has a form for comments. Comments are saved and displayed on the page without proper verification and screening. This makes the application vulnerable to XSS attacks. Here you can make an attack that effectively installs cookies and then displays its contents in a pop-up window, which allows an attacker to collect information about user cookies:",
    xss_example_2_2: "This script sets a new cookie with the name 'evil_cookie' and the value 'stolen_data'. Cookies are set to the root path of the site (path=/), which means that it will be available for all pages on this site and displays a pop-up window with the contents of all available cookies on the current page. The document.cookie function provides access to all cookies on the page as a string.",
    question19_1: "In this task, you must log in as the user 'user' with the password 'password' and must add a malicious script to the comments section. When the comment is published, the script should be executed, showing an alert with document cookies. Refresh the profile page to check if the flag has appeared. Enter the command below into the terminal, then go to",
    question19_2: "in the browser to launch the Docker container, where you should find the hidden flag:",

    placeholder: "Answer",
    incorrect: "Oops.. The answer is incorrect"
  },
  KZ: {
    tasks: "Тапсырмалар",
    submit_button: "Жіберу",
    correct_button: "Дұрыс",
    hint_button: "Кеңес",
    answer0: "пентест",
    answer1: "осалдықтар",
    answer2: "сыртқы",
    answer3: "ішкі",
    answer4: "әлеуметтік",
    answer10: "белсенді",
    answer11: "пассивті",

    question0: "Осалдықтарды анықтау үшін ақпараттық жүйені тестілеу процесі қалай аталады?",
    question1: "Пентест кезінде не анықталады?",
    question2: "Киберқауіпсіздік мамандары компанияның веб-сайтының, сондай-ақ интернеттен қол жетімді ашық порттар мен Желілік қызметтердің осалдығына талдау жасайды. Бұл пентестингтің қандай түріне жатады?",
    question3: "Компания ішкі серверлер мен кәсіпорын қосымшаларына қатысты осалдықтарды анықтау үшін тестілеуден өтеді. Тестерлер корпоративтік желінің ішінен жұмыс істейді. Бұл пентестингтің қандай түріне жатады?",
    question4: "Компанияның киберқауіпсіздік мамандары компания қызметкерлеріне олардың тіркелгі деректерін немесе басқа құпия ақпаратты алу үшін жалған электрондық хаттар жібереді. Бұл пентестингтің қандай түріне жатады?",
    question5: "Желілерді сканерлеу және хосттар мен қызметтерді анықтау үшін қандай құрал қолданылады?",
    question6: "Веб-қосымшалардың қауіпсіздігін тексеру үшін қандай құрал қолданылады және әртүрлі шабуылдар жасауға мүмкіндік береді?",
    question7: "Ішкі желіде қандай құрылғылар белсенді екенін анықтау керек. Сіз қандай Nmap опциясын қолданасыз?",
    question8: "Сіз құрылғыны терең сканерлеуді, соның ішінде ОЖ мен қызметтерді анықтауды қалайсыз. Сіз қандай Nmap опциясын қолданасыз?",
    question9: "Құрылғыдағы порттарды жартылай ашық (SYN) сканерлеу керек. Сіз қандай Nmap опциясын енгізесіз?",
    question10: "Веб-сервер нұсқасы мен операциялық жүйе туралы ақпаратты қамтитын баннерлерді алу үшін веб-серверге HTTP сұрауларын жібересіз. Сіз қандай зерттеу әдісін қолданасыз?",
    question11: "Сіз компания туралы, оның қызметкерлері мен инфрақұрылымы туралы ақпарат жинау үшін олардың веб-сайттары мен әлеуметтік медиа профильдерін қоса, көпшілікке қол жетімді деректерді зерттейсіз. Сіз қандай зерттеу әдісін қолданасыз?",
    question12: "Домен үшін whois сұрауын орындаңыз. astanahub.com домен қашан тіркелді?",
    question13: "Whois сұрауын орындаңыз astanahub.com контакт үшін қандай электрондық пошта адресі көрсетілген?",
    question14: "іздеу жүйесінде 104.26.10.78 IP адресі бар құрылғыны табыңыз. Бұл құрылғыда ең бірінші порт қандай?",
    question15_1: "Төмендегі пәрменді терминалға енгізіңіз, содан кейін жасырын жалаушаны табу керек Docker контейнерін іске қосу үшін браузердегі",
    question15_2: "бөліміне өтіңіз.",
    question15_3: "Жасырын жалауша жалауша бетінде орналасқан:",
    question16_1: "Төмендегі пәрменді терминалға енгізіңіз, содан кейін жасырын жалаушаны табу керек Docker контейнерін іске қосу үшін браузердегі",
    question16_2: "бөліміне өтіңіз.",
    question16_3: "Мұнда жасырын жалаушаны табу үшін SQL инъекциясын қолдану керек:",
    question17_links: "Бұл тапсырмаларда сізге brute forcing шабуылын жүргізу үшін пайдаланушылар мен құпия сөздердің тізімі қажет. Дайын тізімдерді мына жерден табуға болады:",
    passwords_links: "Құпия сөздер",
    users_links: "Пайдаланушылар",
    question17_1: "Төмендегі пәрменді терминалға енгізіңіз, содан кейін жасырын жалаушаны табу керек Docker контейнерін іске қосу үшін шолғышта ",
    question17_2: "тармағына өтіңіз.",
    question17_3: "Мұнда жасырын жалаушаны табу үшін Burp Suite көмегімен brute forcing құпия сөз шабуылын қолдану керек:",
    question18_1: "Төмендегі пәрменді терминалға енгізіңіз, содан кейін жасырын жалаушаны табу керек Docker контейнерін іске қосу үшін шолғышта ",
    question18_2: "тармағына өтіңіз.",
    question18_3: "Мұнда сіз жасырын жалаушаны табу үшін Burp Suite көмегімен brute forcing пайдаланушы мен пароль шабуылын қолдануыңыз керек:",

    hint15: "Кеңес: жасырын жалау 'flag' жолында.",
    hint16: "Кеңес: түсініктемені қолданыңыз ('--)",
    hint18: "Кеңес: бір уақытта бірнеше опцияны айналып өту үшін 'Cluster bomb' шабуыл режимін пайдаланыңыз.",
    hint19: "Кеңес: түсініктеме өрісіне беттегі cookie файлымен әрекеттесе алатын кодты енгізіп көріңіз.",

    pentesting_fundamentals: "Пентестинг негіздері",
    difficulty: "Күрделілік:",
    easy: "Жеңіл",
    category: "Категория:",
    author: "Автор:",
    course_page_description: "Ақпараттық қауіпсіздік дағдыларын меңгеру үшін Пентестинг Негіздері курсын үйренуді бастаңыз.",
    intro_to_pentesting: "Пентестингке кіріспе",
    what_is_pentest: "Пентестинг дегеніміз не?",
    pentest: "Пентест",
    pentest_is: "бұл шабуылдаушылар деректерге немесе жүйелік ресурстарға рұқсатсыз қол жеткізу үшін пайдалануы мүмкін осалдықтарды анықтау мақсатында ақпараттық жүйені тестілеу процесі. Пентест жүйенің техникалық аспектілерін де, оның әлеуметтік шабуылдардан қорғалуын да тексереді.",
    pentest_is_simulation: "Пентест - бұл ақпараттық жүйеге оның қауіпсіздік деңгейін бағалау үшін шабуылды модельдеу. Жүйе иесінің келісімімен жүзеге асырылады және бұзудың әртүрлі әдістері мен әдістерін қамтуы мүмкін. Пентесттің негізгі мақсаты-зиянкестер анықтағанға дейін осалдықтарды анықтау және оларды жою бойынша ұсыныстар беру.",
    main_pentest_types: "Пентесттердің негізгі түрлері",
    internal_pentest: "Ішкі пентест жүйені ішкі желіге қол жеткізген компания қызметкері немесе шабуылдаушы шабуыл жасағандай ішкі жағынан тексеруге бағытталған. Мұндай тест ішкі ресурстардың қауіпсіздігін бағалауға, корпоративтік желідегі ықтимал осалдықтарды анықтауға, сондай-ақ қызметкерлердің қол жеткізу құқықтарының қаншалықты тиімді бақыланатынын тексеруге мүмкіндік береді. Тексерілетін салалардың мысалдары: ішкі серверлер мен мәліметтер базасы, кәсіпорын қосымшалары мен веб-қызметтер, хаттамалар және желілік қызметтер.",
    external_pentest: "Сыртқы пентест жүйені сыртынан тексеруге бағытталған, әдетте интернеттен сыртқы ресурстар мен желілік периметрлердің қауіпсіздігін бағалау үшін жасалады. Сыртқы пентесттің мақсаты-шабуылдаушылар жүйеге сырттан кіру үшін пайдалануы мүмкін осалдықтарды анықтау. Тексерілетін салалардың мысалдары: веб-сайттар мен веб-қосымшалар, сыртқы серверлер мен желілік құрылғылар, жалпыға ортақ IP-мекен-жайлар және ашық порттар.",
    social_pentest: "Әлеуметтік пентест жүйелерге немесе құпия ақпаратқа қол жеткізу үшін әлеуметтік инженерия әдістерін қамтитын адам факторын тексеруге бағытталған. Әлеуметтік пентест қызметкерлерді оқыту мен қауіпсіздік процедурасының әлсіз жақтарын анықтауға, сондай-ақ әлеуметтік инженерия әдістері туралы хабардарлықты арттыруға көмектеседі. Тексерілетін салалардың мысалдары: фишингтік шабуылдар, претекстинг (ақпарат алу үшін жалған әңгіме құру), физикалық қол жетімділік (кеңсеге немесе компания аумағына кіру әрекеті).",
    pentesting_tools: "Пентест өткізуге арналған құралдар",
    pentesting_tools_description: "Пентестинг ақпараттық қауіпсіздік мамандарына жүйедегі осалдықтарды табуға және пайдалануға көмектесетін әртүрлі құралдарды пайдалануды талап етеді. Бұл құралдар белгілі бір тапсырмаларды орындауға арналған бағдарламалық жасақтама, утилиталар немесе сценарийлер болуы мүмкін. Әрбір құралдың өзіндік ерекшеліктері бар екенін және пентест процесінде белгілі бір мәселелерді шешуге арналғанын түсіну маңызды.",
    pentesting_main_tools: "Пентестингте қолданылатын негізгі құралдарға мыналар жатады:",
    nmap_description: "желілерді сканерлеуге және хосттар мен қызметтерді анықтауға арналған қуатты құрал.",
    metasploit_description: "эксплуатацияларды әзірлеуге, сынауға және пайдалануға арналған құрылым. Бұл көптеген пентест тапсырмаларын автоматтандыруға мүмкіндік береді, мысалы, осалдықтарды іздеу және шабуылдарды бастау.",
    wireshark_description: "желідегі деректер пакеттерін ұстауға және зерттеуге мүмкіндік беретін желілік трафик анализаторы. Оның көмегімен желілік трафиктегі күдікті белсенділік пен ауытқуларды анықтауға болады.",
    burp_suite_description: "SQL инъекциясы және XSS сияқты әртүрлі шабуылдарды орындауға мүмкіндік беретін веб-қосымшалардың қауіпсіздігін тексеру құралы.",
    john_the_ripper: "құпия сөзді бұзу құралы. Ол сөздікке шабуыл жасау немесе шабуыл жасау арқылы парольдердің әлсіздігін тексеру үшін қолданылады.",
    nmap_instrument: "Nmap: Желіні сканерлеу құралы",
    tools_description_summary: "Бұл құралдардың әрқайсысы өзінің ерекше мүмкіндіктерін ұсынады және оларды бөлісу жүйенің қауіпсіздігін жан-жақты талдауға мүмкіндік береді.",
    nmap_tool: "Nmap - желілерді сканерлеуге және хосттар мен қызметтерді анықтауға арналған қуатты және икемді құрал. Оның көмегімен сіз ашық порттарды анықтай аласыз, жұмыс істеп тұрған қызметтерді анықтай аласыз, бағдарламалық жасақтама мен операциялық жүйелердің нұсқаларын анықтай аласыз және желіні талдауға байланысты көптеген басқа тапсырмаларды орындай аласыз.",
    nmap_install: "Nmap Windows, macOS және Linux сияқты әртүрлі операциялық жүйелер үшін қол жетімді:",
    nmap_commands: "Nmap командалары",
    nmap_commands_list: "Nmap жүктелгеннен кейін оны кейбір командаларды орындаудан бастауға болады. Бұл командалар құралға ыңғайлы болуға және оның негізгі мүмкіндіктерін түсінуге көмектеседі.",
    nmap_h: "команда анықтамалық ақпаратты және Nmap қолдайтын опциялар мен опциялардың толық тізімін көрсетеді.",
    nmap_sn: "sn (ping scan) опциясы желідегі белсенді құрылғыларды анықтау үшін қолданылады. Nmap ICMP echo сұрауларын жібереді және жауап күтеді. Бұл желіге қосылған құрылғыларды анықтауға көмектеседі.",
    nmap_ss: "sS (SYN scan) опциясы SYN-пакеттерін мақсатты құрылғыға жіберу арқылы жартылай ашық портты сканерлеуді орындайды. Бұл әдіс жылдам және жасырын, өйткені ол толық TCP байланысын орнатпайды.",
    nmap_A: "A (Aggressive scan) опциясы қызметтерді және олардың нұсқаларын анықтауды, сондай-ақ операциялық жүйені және мақсатты құрылғының басқа сипаттамаларын анықтауды қамтитын терең сканерлеуді орындайды.",
    scanning_and_collecting: "Ақпаратты сканерлеу және жинау",
    scanning_description: "Желіні сканерлеу және ақпарат жинау - Бұл жүйенің әлсіз жақтарын анықтауға мүмкіндік беретін пентесттің негізгі кезеңдері. Желіні сканерлеу принциптері белсенді хосттарды, ашық порттарды, жұмыс істеп тұрған қызметтерді және бағдарламалық құрал нұсқаларын анықтау үшін әртүрлі құралдар мен әдістерді пайдалануды қамтиды. Сканерлеудің негізгі мақсаты-ықтимал осалдықтарды анықтау үшін мақсатты жүйе туралы мүмкіндігінше көбірек ақпарат жинау.",
    methods_of_collecting: "Ақпаратты жинау әдістерін екі түрге бөлуге болады: пассивті және белсенді зерттеу.",
    passive_recon: "Пассивті зерттеу",
    passive_recon_description: "жүйемен тікелей өзара әрекеттесусіз ақпарат жинау.  Пассивті зерттеу анықтау қаупін азайтады, өйткені ол мақсатты жүйеде із қалдырмайды.",
    passive_recon_examples: "Мысалдарға қоғамдық деректерді талдау, әлеуметтік желілерді іздеу, веб-сайттарды зерттеу және құралдарды пайдалану жатады.",
    active_recon: "Белсенді зерттеу",
    active_recon_description: "ақпарат алу үшін мақсатты жүйемен тікелей өзара әрекеттесуді қамтиды. Белсенді зерттеу тиімдірек болуы мүмкін, бірақ сонымен бірге қауіпті болуы мүмкін, өйткені оны қауіпсіздік жүйелері анықтай алады.",
    active_recon_examples: "Мысалдарға Nmap сияқты құралдарды пайдаланып Желіні сканерлеу, сервер туралы ақпараты бар баннерлерді алу үшін веб-серверге сұраныстар жіберу жатады.",
    passive_recon_instruments: "Пассивті зерттеу құралдары",
    whois_description: "домендік атауларды тіркеу туралы мәліметтер базасын сұрау үшін қолданылатын хаттама. Оның көмегімен сіз домен иесі, тіркеу күні, жарамдылық мерзімі, тіркеушілер және байланыс деректері туралы ақпарат ала аласыз.",
    whois_command_list: "Whois домендер мен IP мекенжайлары туралы ақпарат алу үшін әртүрлі командаларды ұсынады. Міне, олардың кейбіреулері:",
    domain: "домен",
    whois_domain: "команда домен иесі, тіркеуші, тіркелген күні және жарамдылық мерзімі туралы деректерді, сондай-ақ байланыс ақпаратын қайтарады.",
    whois_v: "команда домен туралы қосымша мәліметтерді, соның ішінде тіркелу және жаңартулар туралы қосымша ақпаратты сұрайды.",
    whois_ip: "команда IP мекенжайы мен байланыс деректерін иеленетін ұйым туралы деректерді ұсынады.",
    whois_h: "көрсетілген Whois сервері арқылы домен туралы ақпаратты сұрау. Бұл пәрмен белгілі бір тіркеуші арқылы деректерді алу қажет болған жағдайда пайдалы.",
    whois_grep: "команда домен туралы ақпаратты сұрайды example.com және тек 'Registrar' сөзі бар жолдарды көрсету үшін шығуды сүзеді (кез келген сөзді қоюға болады).",
    whois_examples: "WHOIS қолдану мысалы",
    whois_example1: "Сіз домен туралы ақпаратты білгіңіз келеді делік astanait.edu.kz. сіз осы команданы орындайсыз",
    whois_example_result: "Жауапта сіз домен иесі, тіркелген күні, жарамдылық мерзімі және тіркеушінің Байланыс ақпараты туралы деректерді көресіз.",
    shodan_description: "интернетке қосылған құрылғыларға арналған іздеу жүйесі. Google сияқты дәстүрлі іздеу жүйелерінен айырмашылығы, Scholar IP адрестерін мен порттарын индекстейді, қосылған құрылғылардың түрлері, олардың орналасуы, бағдарламалық жасақтама және ықтимал осалдықтар туралы ақпарат береді.",
    shodan_functions_list: "Shodan негізгі функциялары мен мүмкіндіктері",
    shodan_key_words: "Кілт сөздерді іздеу (мысалы, осы бағдарламалық жасақтамасы бар құрылғыларды табу үшін басты беттегі іздеу жолағына 'apache' теріңіз).",
    shodan_IP: "IP адрес бойынша іздеу",
    shodan_port: "Порттарды іздеу(мысалы, 'порт:22', барлық ашық порт 22 құрылғыларын табу үшін).",
    sql_injections: "SQL инъекциялары",
    sql_injections_description: "SQL инъекциялары веб-қосымшаларға шабуыл жасаудың ең көп таралған және қауіпті түрлерінің бірі болып табылады. Бұл шабуыл шабуылдаушыға қолданба дерекқорында ерікті SQL сұрауларын орындауға мүмкіндік береді, бұл құпия ақпараттың ағып кетуіне, деректердің өзгеруіне немесе тіпті жүйенің толық бұзылуына әкелуі мүмкін.",
    sql_injections_examples: "SQL инъекциясының мысалдары",
    sql_injections_example1: "№1 мысал. Мысалы, бізде 'username' және 'password' өрістері бар веб-кіру формасы бар. Дерекқорға сұраныс келесідей болуы мүмкін:",
    sql_injections_example1_2: "Шабуылдаушы' username 'өрісіне admin' -- және 'password'өрісіне кез келген мәтінді енгізе алады. Бұл сұрауды келесідей өзгерту:",
    sql_injections_example1_3: "-- кейін бәрі еленбейді және сұрау болады:",
    sql_injections_example1_4: "Осылайша, парольді тексеру еленбейді және шабуылдаушы 'admin'пайдаланушысына қол жеткізе алады.",
    sql_injections_example2: "№2 мысал. Бізде мәліметтер базасына бірдей сұраныс бар делік:",
    sql_injections_example2_2: "Егер шабуылдаушы 'username' өрісіне admin ' OR ' 1 ' = '1 және' password ' өрісіне кез келген құпия сөзді енгізсе, сұрау болады:",
    sql_injections_example2_3: "'1'='1' шарты әрқашан ақиқат болғандықтан, сұрау шабуылдаушыға рұқсат беру арқылы users кестесіндегі барлық жазбаларды қайтарады.",
    docker_description: "Docker оқшауланған тестілеу орталарын құрудың оңай әдісін ұсынады. Дайын контейнерлерді қолдана отырып, тестілеу осалдығы бар веб-қосымшаларды жылдам орналастыруға болады. Docker көмегімен сіз келесі тапсырмаларды орындайтын оқшауланған ортаны іске қоса аласыз.",
    docker_install: "Ubuntu 20.04 және одан кейінгі нұсқаларында Docker алдын ала орнатылған. Оны орнатудың қажеті жоқ. Docker орнатылғанына немесе орнатылмағанына көз жеткізу үшін терминалға теріңіз:",
    docker_install_link: "Егер Docker дұрыс орнатылған болса, сіз 'Hello from Docker!'. Егер Docker орнатылмаған болса, оны орнату нұсқауларын орындау арқылы орнатуға болады:",
    authentication_vulnerabilities: "Аутентификацияның осалдықтары",
    authentication_vulnerabilities_description: "Аутентификацияның осалдықтары веб-қосымшаларда ең көп таралған және қауіпті болып табылады. Аутентификация шабуылдары пайдаланушы тіркелгілеріне немесе әкімшілік панельдерге рұқсатсыз кіруге бағытталған. Шабуылдың кең таралған әдістерінің бірі - 'brute forcing' немесе дөрекі күш қолдану құпия сөздері.",
    brute_force_desc: "шабуыл әдісі, онда шабуылдаушы пайдаланушы аттары мен құпия сөздердің барлық ықтимал комбинациялары арқылы дұрысын тапқанша дәйекті түрде қайталанады. Brute forcing тиімділігі парольдің күрделілігіне және шабуылдаушыға қол жетімді есептеу ресурстарының қуатына байланысты. Құпия сөздері жеткіліксіз және бірнеше кіру әрекеттерінен қорғайтын механизмдері жоқ веб-қосымшалар мұндай шабуылдарға әсіресе осал.",
    burp_suite_desc: "Біз Burp Suite, веб-қосымшалардың қауіпсіздігін тексеруге арналған кешенді құрал туралы айтқан болатынбыз. Ол трафикті ұстауға арналған прокси-сервер, шабуылды орындау модулі (Intruder) және кодты талдау модулі (Repeater) сияқты көптеген функцияларды қамтиды. Сіз оны ресми сайтқа орната аласыз:",
    burp_suite_func_list: "Burp Suite негізгі функциялары:",
    proxy_desc: "Браузер мен сервер арасындағы HTTP/HTTPS сұраулары мен жауаптарын ұстап қалу және өзгерту.",
    repeater_desc: "Толығырақ талдау үшін сұраныстарды қолмен қайта жіберіңіз және өзгертіңіз.",
    intruder_desc: "Парольдер немесе SQL инъекциялары сияқты әртүрлі әдістерді қолдана отырып шабуылдарды автоматтандыру.",
    burp_suite_list_sum: "Burp Suite Intruder көмегімен brute forcing процесін оңай автоматтандыруға болады.",
    brute_forcing_in_burp_suite: "Brute Forcing, Burp Suite",
    brute_force_example_list: "Мысалы, сіз burp Suite көмегімен веб-қосымшаға brute forcing шабуылын жасағыңыз келеді:",
    brute_force_example_1: "Алдымен сіз Burp Suite-те веб-шолғышты ашып, веб-қосымшаға өтесіз.",
    brute_force_example_2: "Содан кейін сіз кіру бетіне кіріп, Burp Proxy-де логин мен парольмен HTTP сұрауын ұстайсыз.",
    brute_force_example_3: "Бұл сұрауды сіз Burp Repeater-ге жібересіз (сұраныс бойынша тінтуірдің оң жақ түймешігімен нұқыңыз және әр түрлі параметрлерді қолмен тексеру үшін 'Send to Repeater' таңдаңыз).",
    brute_force_example_4: "Осыдан кейін сіз Burp Intruder-ді конфигурациялайсыз (сұраныс бойынша тінтуірдің оң жақ түймешігімен нұқыңыз және brute forcing-ті автоматтандыру үшін 'Send to Intruder' таңдаңыз). Сұрыптағыңыз келетін элементті бөлектеңіз (мысалы, құпия сөз өрісі) және 'Add' түймесін басыңыз.",
    brute_force_example_5: "Содан кейін Payloads қойындысына өтіп, парольдер тізімін жүктеңіз, шабуылды бастаңыз ('start attack' батырмасы) және дұрыс комбинацияларды анықтау үшін сервердің жауаптарын талдаңыз.",
    brute_force_answers_list: "Шабуылдың дұрыстығын анықтайтын сервер жауаптары болуы мүмкін:",
    brute_force_answer_1: "HTTP күйлері (дұрыс кіру күйі 200 (OK), ал сәтсіз әрекеттер 401 (Unauthorized) немесе 403 (Forbidden) қайтарады)",
    brute_force_answer_2: "Жауап ұзындығы (мысалы, сәтті кіргеннен кейінгі бетте көбірек деректер болуы мүмкін (жеке кабинет, сәлемдесу хабарламасы)).",
    brute_force_answer_3: "Жауап денесі (сәтті кіруді көрсете алатын кілт сөздерге ('Welcome', 'Dashboard') жауап мазмұнын тексеріңіз).",
    brute_force_answer_4: "Қайта бағыттау (сәтті кіру басқа бетке қайта бағытталуы мүмкін (302 Found көмегімен қайта бағыттау), ал сәтсіз кіру әрекеттері сол бетте қалады).",
    xss: "Cross-site Scripting (XSS)",
    xss_desc: "бұл зиянкестерге зиянды сценарийлерді веб-беттерге енгізуге мүмкіндік беретін веб-қосымшалардың осалдығының бір түрі, содан кейін олар пайдаланушылардың браузерлерінде орындалады. XSS көмегімен шабуылдаушы пайдаланушы деректерін ұрлай алады, көрсетілген мазмұнды өзгерте алады немесе басқа зиянды әрекеттерді орындай алады.",
    xss_type_list: "XSS шабуылдарының бірнеше түрі бар:",
    reflected_xss: "Шағылысқан XSS: зиянды кодты қамтитын сұрауға жауап ретінде зиянды сценарий веб-серверден шағылысқан кезде пайда болады.",
    stored_xss: "Сақталған XSS: зиянды сценарий серверде сақталғанда және вирус жұққан бетті қарайтын барлық пайдаланушыларға көрсетілгенде орын алады.",
    dom_xss: "DOM-based XSS: осалдық серверде емес, кодтың клиенттік бөлігінде болған кезде пайда болады. Зиянды сценарий беттің Dom құрылымын өзгертеді, нәтижесінде зиянды код орындалады.",
    examples: "Мысалдар",
    xss_example_1: "№1 мысал. Мысалы, бізде веб-сайтта іздеу формасы бар, ол URL-ден query параметрін қабылдайды және оны тиісті тексерусіз және қорғаусыз нәтижелер бетінде көрсетеді. Шабуылдаушы зиянды JavaScript коды бар URL жасай алады, мысалы:",
    xss_example_1_2: "Осы сілтемені басқан кезде сценарий жәбірленушінің шолғышында орындалады, бұл 'XSS' хабарламасы бар терезенің пайда болуына әкеледі.",
    xss_example_2: "№2 мысал. Комментариялар формасы бар веб-қосымша бар делік. Комментариялар тиісті тексерусіз және экрансыз бетте сақталады және көрсетіледі. Бұл қолданбаны XSS шабуылдарына осал етеді. Мұнда сіз cookies-ті тиімді орнататын, содан кейін оның мазмұнын қалқымалы терезеде шығаратын шабуыл жасай аласыз, бұл шабуылдаушыға пайдаланушылардың cookies туралы ақпарат жинауға мүмкіндік береді:",
    xss_example_2_2: "Бұл сценарий 'evil_cookie' деп аталатын және 'stolen_data' мәні бар жаңа cookie орнатады. Cookies сайттың түбірлік жолына орнатылады (path=/), яғни ол осы сайттағы барлық беттерге қол жетімді болады және ағымдағы беттегі барлық қол жетімді cookies мазмұны бар қалқымалы терезені көрсетеді. Функция document.cookie беттегі барлық cookies-ке жол түрінде қол жеткізуге мүмкіндік береді.",
    question19_1: "Бұл тапсырмада сіз 'password' құпия сөзі бар 'user' пайдаланушысы ретінде кіріп, түсініктемелер бөліміне зиянды сценарий енгізуіңіз керек. Түсініктеме жарияланған кезде сценарий құжаттың cookies-тен ескертуді көрсету арқылы орындалуы керек. Жалаушаның пайда болғанын тексеру үшін профиль бетін жаңартыңыз. Төмендегі пәрменді терминалға енгізіңіз, содан кейін жасырын жалаушаны табу керек Docker контейнерін іске қосу үшін шолғышта ",
    question19_2: "тармағына өтіңіз:",

    placeholder: "Жауап",
    incorrect: "Жауап дұрыс емес"
  },
  RU: {
    tasks: "Задания",
    submit_button: "Отправить",
    hint_button: "Подсказка",
    correct_button: "Верно",
    answer0: "пентест",
    answer1: "уязвимости",
    answer2: "внешний",
    answer3: "внутренний",
    answer4: "социальный",
    answer10: "активный",
    answer11: "пассивный",

    question0: "Как называется процесс тестирования информационной системы для выявления уязвимостей?",
    question1: "Что выявляется при проведении пентеста?",
    question2: "Специалисты проводят анализ уязвимостей веб-сайта компании, а также открытых портов и сетевых сервисов, доступных из интернета. К какому виду пентестинга это относится?",
    question3: "В компании проводится тестирование для выявления уязвимостей, связанных с внутренними серверами и корпоративными приложениями. Тестировщики работают изнутри корпоративной сети. К какому виду пентестинга это относится?",
    question4: "Тестировщики отправляют фальшивые электронные письма сотрудникам компании с целью получить их учетные данные или другую конфиденциальную информацию. К какому виду пентестинга это относится?",
    question5: "Какой инструмент используется для сканирования сетей и обнаружения хостов и сервисов?",
    question6: "Which tool is used to test the security of web applications and allows you to perform various types of attacks?",
    question7: "Вам необходимо определить, какие устройства активны в подсети. Какую опцию Nmap вы используете?",
    question8: "Вы хотите провести глубокое сканирование устройства, включая определение ОС и сервисов. Какую опцию Nmap вы используете?",
    question9: "Вам нужно выполнить полуоткрытое (SYN) сканирование портов на устройстве. Какую опцию Nmap вы введете?",
    question10: "Вы отправляете HTTP-запросы к веб-серверу, чтобы получить баннеры, содержащие информацию о версии веб-сервера и операционной системы. Какой метод исследования вы используете?",
    question11: "Вы анализируете публично доступные данные о компании, включая их веб-сайты и профили в социальных сетях, чтобы собрать информацию о ее сотрудниках и инфраструктуре. Какой метод исследования вы используете?",
    question12: "Выполните whois-запрос для домена astanahub.com и ответьте когда был зарегистрирован домен?",
    question13: "Выполните whois-запрос для домена astanahub.com и ответьте какой адрес электронной почты указан для контакта?",
    question14: "в поиске найдите устройство с IP-адресом 104.26.10.78. Какой самый первый порт открыт на этом устройстве?",
    question15_1: "Введите команду ниже в терминал, затем перейдите на",
    question15_2: "в браузере, чтобы запустить Docker-контейнер, где вы должны найти скрытый флаг.",
    question15_3: "Скрытый флаг находится на странице флага:",
    question16_1: "Введите команду ниже в терминал, затем перейдите на",
    question16_2: "в браузере, чтобы запустить Docker-контейнер, где вы должны найти скрытый флаг.",
    question16_3: "Здесь вы должны применить SQL-инъекции, чтобы найти скрытый флаг:",
    question17_links: "В этих заданиях вам потребуется список пользователей и паролей для проведения brute forcing атаки. Готовые списки можно найти здесь:",
    passwords_links: "Пароли",
    users_links: "Пользователи",
    question17_1: "Введите команду ниже в терминал, затем перейдите на",
    question17_2: "в браузере, чтобы запустить Docker-контейнер, где вы должны найти скрытый флаг.",
    question17_3: "Здесь вы должны применить brute forcing атаку пароля, используя Burp Suite, чтобы найти скрытый флаг:",
    question18_1: "Введите команду ниже в терминал, затем перейдите на",
    question18_2: "в браузере, чтобы запустить Docker-контейнер, где вы должны найти скрытый флаг.",
    question18_3: "Здесь вы должны применить brute forcing атаку пользователя и пароля, используя Burp Suite, чтобы найти скрытый флаг:",

    hint15: "Подсказка: Флаг находится в пути flag.",
    hint16: "Подсказка: Используйте комментирование ('--)",
    hint18: "Подсказка: Используйте режим атаки 'Cluster bomb', чтобы перебрать несколько параметров одновременно.",
    hint19: "Подсказка: Попробуйте ввести в поле комментария код, который может взаимодействовать с cookie на странице.",

    pentesting_fundamentals: "Основы пентестирования",
    difficulty: "Сложность:",
    easy: "Легкий",
    category: "Категория:",
    author: "Автор:",
    course_page_description: "Начните изучать курс основ пентестирования, чтобы овладеть навыками информационной безопасности.",
    intro_to_pentesting: "Введение в пентестинг",
    what_is_pentest: "Что такое Пентестинг?",
    pentest: "Пентест",
    pentest_is: "это процесс проведения тестирования информационной системы с целью выявления уязвимостей, которые могут быть использованы злоумышленниками для несанкционированного доступа к данным или системным ресурсам. В ходе пентеста проверяются как технические аспекты системы, так и ее защищенность от социальных атак.",
    pentest_is_simulation: "Пентест – это симуляция атаки на информационную систему с целью оценки уровня её защищенности. Проводится с согласия владельца системы и может включать в себя различные методы и техники взлома. Основная цель пентеста – выявление уязвимостей до того, как их обнаружат злоумышленники, и предоставление рекомендаций по их устранению.",
    main_pentest_types: "Основные виды пентестов",
    internal_pentest: "Внутренний пентест направлен на проверку системы изнутри, как если бы атака осуществлялась сотрудником компании или злоумышленником, получившим доступ к внутренней сети. Такой тест позволяет оценить защищенность внутренних ресурсов, выявить возможные уязвимости в корпоративной сети, а также проверить, насколько эффективно контролируются права доступа сотрудников. Примеры тестируемых областей: внутренние серверы и базы данных, корпоративные приложения и веб-сервисы, протоколы и сетевые службы.",
    external_pentest: "Внешний пентест направлен на проверку системы снаружи, обычно проводится из интернета, чтобы оценить защищенность внешних ресурсов и сетевых периметров. Цель внешнего пентеста – выявить уязвимости, которые могут быть использованы злоумышленниками для проникновения в систему извне. Примеры тестируемых областей: веб-сайты и веб-приложения, внешние серверы и сетевые устройства, публичные IP-адреса и открытые порты.",
    social_pentest: "Социальный пентест направлен на проверку человеческого фактора, включающая в себя методы социальной инженерии для получения доступа к системам или конфиденциальной информации. Социальный пентест помогает выявить слабые места в обучении сотрудников и процедуре безопасности, а также повысить осведомленность о методах социальной инженерии. Примеры тестируемых областей: фишинг-атаки, претекстинг (создание ложной истории для получения информации), физический доступ (попытка проникновения в офис или на территорию компании).",
    pentesting_tools: "Инструменты для проведения пентеста",
    pentesting_tools_description: "Пентестинг требует использования различных инструментов, которые помогают специалистам в области информационной безопасности находить и эксплуатировать уязвимости в системе. Эти инструменты могут быть программными приложениями, утилитами или скриптами, предназначенными для выполнения специфических задач. Важно понимать, что каждый инструмент обладает своими особенностями и предназначен для решения определённых задач в процессе пентеста.",
    pentesting_main_tools: "Основные инструменты, используемые в пентестинге, включают:",
    nmap_description: "мощный инструмент для сканирования сетей и обнаружения хостов и сервисов.",
    metasploit_description: "фреймворк для разработки, тестирования и использования эксплойтов. Он позволяет автоматизировать многие задачи пентеста, такие как поиск уязвимостей и запуск атак.",
    wireshark_description: "анализатор сетевого трафика, который позволяет перехватывать и изучать пакеты данных в сети. С его помощью можно выявить подозрительную активность и аномалии в сетевом трафике.",
    burp_suite_description: "инструмент для тестирования безопасности веб-приложений, который позволяет выполнять различные виды атак, такие как SQL-инъекции и XSS.",
    john_the_ripper: "инструмент для взлома паролей. Он используется для проверки слабости паролей путем перебора или атаки по словарю.",
    nmap_instrument: "Nmap: Инструмент для сканирования сетей",
    tools_description_summary: "Каждый из этих инструментов предоставляет свои уникальные возможности, и их совместное использование позволяет получить всесторонний анализ безопасности системы.",
    nmap_tool: "Nmap – это мощный и гибкий инструмент для сканирования сетей и обнаружения хостов и сервисов. С его помощью можно обнаруживать открытые порты, идентифицировать запущенные сервисы, определять версии программного обеспечения и операционные системы, а также проводить множество других задач, связанных с анализом сети.",
    nmap_install: "Nmap доступен для различных операционных систем, включая Windows, macOS и Linux:",
    nmap_commands: "Команды Nmap",
    nmap_commands_list: "После установки Nmap можно начать его использование с выполнения некоторых команд. Эти команды помогут вам освоиться с инструментом и понять его основные возможности.",
    nmap_h: "команда выводит справочную информацию и полный список опций и параметров, поддерживаемых Nmap.",
    nmap_sn: "опция -sn (ping scan) используется для определения активных устройств в сети. Nmap отправляет ICMP echo-запросы и ждет отклика. Это помогает выявить устройства, которые подключены к сети.",
    nmap_ss: "опция -sS (SYN scan) выполняет полуоткрытое сканирование портов, отправляя SYN-пакеты к целевому устройству. Этот метод быстр и скрытен, так как не устанавливает полное TCP-соединение.",
    nmap_A: "опция -A (Aggressive scan) выполняет глубокое сканирование, включающее обнаружение сервисов и их версий, а также определение операционной системы и других характеристик целевого устройства.",
    scanning_and_collecting: "Сканирование и сбор информации",
    scanning_description: "Сканирование сети и сбор информации - это ключевые этапы пентеста, которые позволяют определить слабые места в системе. Принципы сканирования сети включают в себя использование различных инструментов и техник для идентификации активных хостов, открытых портов, запущенных сервисов и версий программного обеспечения. Основная цель сканирования - собрать как можно больше информации о целевой системе, чтобы выявить потенциальные уязвимости.",
    methods_of_collecting: "Методы сбора информации можно разделить на два типа: пассивное и активное исследование.",
    passive_recon: "Пассивное исследование",
    passive_recon_description: "сбор информации без непосредственного взаимодействия с целевой системой.  Пассивное исследование минимизирует риск обнаружения, так как не оставляет следов на целевой системе.",
    passive_recon_examples: "Примеры включают анализ публичных данных, поиск в социальных сетях, изучение веб-сайтов и использование инструментов.",
    active_recon: "Активное исследование",
    active_recon_description: "включает прямое взаимодействие с целевой системой для получения информации. Активное исследование может быть более эффективным, но также более рискованным, так как оно может быть обнаружено системами безопасности.",
    active_recon_examples: "Примеры включают сканирование сети с использованием таких инструментов, как Nmap, отправку запросов к веб-серверу для получения баннеров с информацией о сервере. ",
    passive_recon_instruments: "Инструменты пассивного исследования",
    whois_description: "протокол, который используется для запроса базы данных о регистрации доменных имен. С его помощью можно получить информацию о владельце домена, дате регистрации, сроке действия, регистраторах и контактных данных.",
    whois_command_list: "Whois предоставляет разнообразные команды для получения информации о доменах и IP-адресах. Вот некоторые из них:",
    domain: "домен",
    whois_domain: "команда возвращает данные о владельце домена, регистраторе, дате регистрации и истечении срока действия, а также контактную информацию.",
    whois_v: "команда запрашивает более подробную информацию о домене, включая дополнительную информацию о регистрациях и обновлениях.",
    whois_ip: "команда предоставляет данные об организации, которой принадлежит IP-адрес, и контактные данные.",
    whois_h: "запрос информации о домене через указанный сервер whois. Эта команда полезна, если нужно получить данные через конкретного регистратора.",
    whois_grep: "команда запрашивает информацию о домене example.com и фильтрует вывод, чтобы показать только строки, содержащие слово 'Registrar' (можно поставить любое слово).",
    whois_examples: "Пример использования WHOIS",
    whois_example1: "Предположим, вы хотите узнать информацию о домене astanait.edu.kz. Вы выполняете команду",
    whois_example_result: "В ответе вы увидите данные о владельце домена, дате регистрации, сроке действия и контактной информации регистратора.",
    shodan_description: "поисковая система для устройств, подключенных к интернету. В отличие от традиционных поисковых систем, таких как Google, Shodan индексирует IP-адреса и порты, предоставляя информацию о типах подключенных устройств, их расположении, используемом ПО и потенциальных уязвимостях.",
    shodan_functions_list: "Основные функции и возможности Shodan:",
    shodan_key_words: "Поиск по ключевым словам (например, введите 'apache' в поле поиска на главной странице, чтобы найти устройства с этим ПО).",
    shodan_IP: "Поиск по IP-адресам",
    shodan_port: "Поиск по портам (например, 'port:22', чтобы найти все устройства с открытым портом 22).",
    sql_injections: "SQL-инъекции",
    sql_injections_description: "SQL-инъекции являются одним из наиболее распространенных и опасных видов атак на веб-приложения. Эта атака позволяет злоумышленнику выполнять произвольные SQL-запросы в базе данных приложения, что может привести к утечке конфиденциальной информации, изменению данных или даже полному компрометированию системы.",
    sql_injections_examples: "Примеры SQL-инъекции",
    sql_injections_example1: "Пример №1. Предположим, у нас есть веб-форма для входа в систему с полями 'username' и 'password'. Запрос к базе данных может выглядеть так:",
    sql_injections_example1_2: "Злоумышленник может ввести admin' -- в поле 'username' и любой текст в поле 'password'. Это изменит запрос следующим образом:",
    sql_injections_example1_3: "Всё после -- будет проигнорировано, и запрос станет:",
    sql_injections_example1_4: "Таким образом, проверка пароля игнорируется, и злоумышленник получит доступ к аккаунту 'admin'.",
    sql_injections_example2: "Пример №2. Предположим, что у нас такой же запрос к базе данных:",
    sql_injections_example2_2: "Если злоумышленник вводит admin' OR '1'='1 в поле 'username' и любой пароль в поле 'password', запрос станет:",
    sql_injections_example2_3: "Поскольку условие '1'='1' всегда истинно, запрос вернет все записи из таблицы users, предоставляя доступ злоумышленнику.",
    docker_description: "Docker предоставляет легкий способ создания изолированных сред для тестирования. Используя готовые контейнеры, можно быстро развернуть веб-приложения с уязвимостями для проведения тестов. Используя Docker вы сможете запустить изолированную среду, где вы будете выполнять последующие задания.",
    docker_install: "В Ubuntu 20.04 и более поздних версиях Docker предустановлен. Его не нужно его устанавливать. Чтобы удостовериться установлен у вас Docker или нет, введите в терминале:",
    docker_install_link: "Если Docker установлен правильно, вы увидите сообщение 'Hello from Docker!'. Если Docker не установлен, то его можно установить следуя инструкциям по установке:",
    authentication_vulnerabilities: "Уязвимости аутентификации",
    authentication_vulnerabilities_description: "Уязвимости аутентификации являются одними из наиболее распространенных и опасных в веб-приложениях. Атаки на аутентификацию направлены на получение несанкционированного доступа к учетным записям пользователей или административным панелям. Одним из распространенных методов атаки является brute forcing, или перебор паролей.",
    brute_force_desc: "метод атаки, при котором злоумышленник последовательно перебирает все возможные комбинации логинов и паролей до тех пор, пока не найдет правильную. Эффективность brute forcing зависит от сложности пароля и мощности вычислительных ресурсов, доступных злоумышленнику. Веб-приложения с недостаточно сильными паролями и без механизмов защиты от многократных попыток входа особенно уязвимы к таким атакам.",
    burp_suite_desc: "Ранее мы уже упоминали Burp Suite, комплексный инструмент для тестирования безопасности веб-приложений. Он включает в себя множество функций, таких как прокси-сервер для перехвата трафика, модуль для выполнения атак (Intruder) и модуль для анализа кода (Repeater). Установить можно на офицальном сайте:",
    burp_suite_func_list: "Основные функции Burp Suite:",
    proxy_desc: "Перехват и изменение HTTP/HTTPS-запросов и ответов между браузером и сервером.",
    repeater_desc: "Повторный запуск и изменение запросов вручную для детального анализа.",
    intruder_desc: "Автоматизация атак с использованием различных техник, таких как перебор паролей или SQL-инъекций.",
    burp_suite_list_sum: "С использованием Burp Suite Intruder можно легко автоматизировать процесс brute forcing.",
    brute_forcing_in_burp_suite: "Brute Forcing в Burp Suite",
    brute_force_example_list: "Предположим, вы хотите провести атаку brute forcing на веб-приложение с помощью Burp Suite:",
    brute_force_example_1: "Сначала вы открываете встроенный браузер в Burp Suite и переходите в целевое веб-приложение.",
    brute_force_example_2: "Затем вы входите на страницу входа и перехватываете HTTP-запрос с логином и паролем  в Burp Proxy.  ",
    brute_force_example_3: "Этот запрос вы отправляете в Burp Repeater (ПКМ по запросу и кликакете на 'Send to Repeater') для тестирования различных параметров вручную.",
    brute_force_example_4: "После этого вы настраиваете Burp Intruder (ПКМ по запросу и кликакете на 'Send to Intruder') для автоматизации brute forcing. Выделите элемент (например, поле пароля), который хотите перебрать, и нажмите кнопку 'Add'.",
    brute_force_example_5: "Затем переходите во вкладку Payloads, загружаете список паролей, запускаете атаку (кнопка 'Start atack') и анализируете ответы сервера, чтобы определить успешные комбинации.",
    brute_force_answers_list: "Ответы сервера, которые определяют успешность атаки могут быть:",
    brute_force_answer_1: "HTTP-статусы (успешный вход статус 200 (OK), в то время как неудачные попытки возвращают 401 (Unauthorized) или 403 (Forbidden))",
    brute_force_answer_2: "Длина ответа (например, страница после успешного входа может содержать больше данных (личный кабинет, приветственное сообщение)).",
    brute_force_answer_3: "Тело ответа (проверяйте содержимое ответа на наличие ключевых слов ('Welcome', 'Dashboard'), которые могут указывать на успешный вход).",
    brute_force_answer_4: "Редиректы (успешный вход может привести к перенаправлению на другую страницу (редирект с 302 Found), в то время как неудачные попытки входа остаются на той же странице).",
    xss: "Межсайтовый скриптинг (XSS)",
    xss_desc: "это тип уязвимости веб-приложений, который позволяет злоумышленникам внедрять вредоносные скрипты на веб-страницы, которые затем исполняются в браузерах пользователей. С помощью XSS злоумышленник может похищать данные пользователей, изменять отображаемое содержимое или выполнять другие вредоносные действия.",
    xss_type_list: "Существует несколько типов XSS-атак:",
    reflected_xss: "Отраженный XSS: Происходит, когда вредоносный скрипт отражается от веб-сервера в ответ на запрос, который содержит вредоносный код.",
    stored_xss: "Хранимый XSS: Происходит, когда вредоносный скрипт сохраняется на сервере и отображается всем пользователям, которые просматривают зараженную страницу.",
    dom_xss: "DOM-based XSS: Происходит, когда уязвимость существует в клиентской части кода, а не на сервере. Вредоносный скрипт модифицирует DOM-структуру страницы, что приводит к выполнению вредоносного кода.",
    examples: "Примеры",
    xss_example_1: "Пример №1. Предположим, у нас есть форма поиска на веб-сайте, которая принимает параметр query из URL и отображает его на странице результатов без должной валидации и экранирования. Злоумышленник может создать URL, содержащий вредоносный JavaScript-код, например:",
    xss_example_1_2: "При переходе по этой ссылке скрипт выполнится в браузере жертвы, вызывая появление окна с сообщением 'XSS'.",
    xss_example_2: "Пример №2. Предположим, есть веб-приложение, в котором есть форма для комментариев. Комментарии сохраняются и отображаются на странице без должной проверки и экранирования. Это делает приложение уязвимым к XSS-атакам. Здесь можно совершить атаку, которая эффективно устанавливает cookies и затем выводит ее содержимое во всплывающем окне, что позволяет злоумышленнику собирать информацию о cookies пользователей: ",
    xss_example_2_2: "Данный скрипт устанавливает новую cookie с именем 'evil_cookie' и значением 'stolen_data'. Cookies устанавливается на корневой путь сайта (path=/), что означает, что она будет доступна для всех страниц на этом сайте и выводит всплывающее окно с содержимым всех доступных cookies на текущей странице. Функция document.cookie предоставляет доступ ко всем cookies на странице в виде строки.",
    question19_1: "В этом задании вы должны войти, как пользователь 'user' с паролем 'password' и должны внести вредоносный скрипт в раздел комментариев.  Когда комментарий будет опубликован, скрипт должен выполниться, показав оповещение с cookies документа. Обновите страницу профиля, чтобы проверить, появился ли флаг. Введите команду ниже в терминал, затем перейдите на",
    question19_2: "в браузере, чтобы запустить Docker-контейнер, где вы должны найти скрытый флаг:",

    placeholder: "Ответ",
    incorrect: "Ой.. Ответ неверен"
  },
}

// Функция подсказки
const HintPopup: FunctionComponent<{ hint: string, onClose: () => void }> = ({ hint, onClose }) => (
  <div className="popup">
    <div className="popup-content">
      <button className="close-button" onClick={onClose}>&times;</button>
      <p>{hint}</p>
    </div>
  </div>
);

const CoursePagePentest: FunctionComponent = () => {
  const { language, setLanguage } = useLanguage(); // Использование кастомного хука для управления языком
  const t = translations[language]; // Получение переводов на основе выбранного языка
  const {store} = useContext(Context);
  const [email, setEmail] = useState<string>();
  // Кол-во dropdown секций
  const [isOpenArray, setIsOpenArray] = useState(new Array(7).fill(false));
  
  // Раскрытие dropdown секций
  const toggleSection = (index: number) => {
    const updatedIsOpenArray = [...isOpenArray];
    updatedIsOpenArray[index] = !updatedIsOpenArray[index];
    setIsOpenArray(updatedIsOpenArray);
  };
  useEffect( ()=>{
    async function userEmail() {
      const ss = store.user.email.split('@')[0];
      setEmail(ss); 
    }
    if(store.isAuth){
      userEmail();
    }
  },[store.isAuth])
  const student = email;
  console.log(student);
  const studentHashFlag1 = SHA256(student + "_pentest1").toString(); // зашифрованный flag юзера
  const studentHashFlag2 = SHA256(student + "_pentest2").toString();
  const studentHashFlag3 = SHA256(student + "_pentest3").toString();
  const studentHashFlag4 = SHA256(student + "_pentest4").toString();
  const studentHashFlag5 = SHA256(student + "_pentest_xss").toString();

  const correctAnswers = [t.answer0, t.answer1, t.answer2, t.answer3, t.answer4, "nmap", "burp suite", "-sn", "-a", "-ss", t.answer10, t.answer11, "2016-06-19", "support@gohost.kz", "80", studentHashFlag1, studentHashFlag2, studentHashFlag3, studentHashFlag4, studentHashFlag5]; // массивых ответов на Задания

  const initialAnswerState = { isCorrect: false, isSubmitted: false };
  const [userAnswers, setUserAnswers] = useState(["", ""]);
  const [answerStates, setAnswerStates] = useState(Array(120).fill(initialAnswerState));
  const [alertVisible, setAlertVisible] = useState(false);

  // Функция для обработки изменений в ответах пользователя
  const handleAnswerChange = (index: number, value: string) => {
    setUserAnswers(prevState => {
      const updatedAnswers = [...prevState];
      updatedAnswers[index] = value.toLowerCase();
      return updatedAnswers;
    });
  };

  // Функция для обработки отправки ответа
  const handleSubmit = (index: number) => {
    const isCorrect = userAnswers[index] === correctAnswers[index];
    const updatedAnswerStates = [...answerStates];
    updatedAnswerStates[index] = { isCorrect, isSubmitted: true };
    setAnswerStates(updatedAnswerStates);

    if(isCorrect){
      console.log(store.user.email);
      const email = store.user.email;
      store.updatedprogess(email);
    }

    // Показывает ошибку на 3 сек, если ответ не правильный
    if (!isCorrect) {
      setAlertVisible(true);
      setTimeout(() => setAlertVisible(false), 3000);
    }
  };

  // Смена стиля кнопки в завимиости от правильности ответа
  const getButtonStyle = (index: number) => {
    const { isCorrect, isSubmitted } = answerStates[index];
    return {
      backgroundColor: isSubmitted && isCorrect ? '#47dd00' : '',
      borderColor: isSubmitted && isCorrect ? '#47dd00' : '',
      color: isSubmitted && isCorrect ? 'white' : '',
      cursor: isSubmitted && isCorrect ? 'auto' : '',
    };
  };

  // Проверка правильности ответа при сабмишне
  const isDisabled = (index: number) => answerStates[index].isSubmitted && answerStates[index].isCorrect;

  // Смена текста кнопки в завимиости от правильности ответа
  const getButtonText = (index: number) => answerStates[index].isSubmitted && answerStates[index].isCorrect ? t.correct_button : t.submit_button;


  // Функция для отображения подсказки
  const showHint = (hint: string) => {
    setHintText(hint);
    setHintPopupVisible(true);
  };

  // Состояние для отображения подсказки и текста подсказки
  const [hintPopupVisible, setHintPopupVisible] = useState(false);
  const [hintText, setHintText] = useState("");

  // Функция для закрытия всплывающего окна с подсказкой
  const closeHintPopup = () => {
    setHintPopupVisible(false);
    setHintText("");
  };

  const xssmessage = "http://example.com/search?query=<script>alert('XSS');</script>";
  const xssmessage1 = "<script> document.cookie = 'evil_cookie=stolen_data; path=/'; alert(document.cookie); </script>";

  
  return (
    <div className="course-page">
      <NavBar />
      <div className="course-page-information-container">
        <h1 className="course-page-title">{t.pentesting_fundamentals}</h1>
        <div className="course-page-tags-container">
          <div className="difficulty-container">
            <div className="difficulty-course-page">{t.difficulty}</div>
            <div className="difficulty-type">
              <div className="type-value">{t.easy}</div>
            </div>
          </div>
          <div className="category-container">
            <div className="category">{t.category}</div>
            <div className="category-type">
              <div className="categorytypetext">Pentest</div>
            </div>
          </div>
          <div className="author-container">
            <div className="author">{t.author}</div>
            <div className="cyberskills">CyberSkills</div>
          </div>
        </div>
        <div className="course-page-description">
          {t.course_page_description}
        </div>
      </div>
      {/* Course sections Container */}
      <main className="coursesectionscontainer">
        <div className="coursesectioncontainer" onClick={() => toggleSection(0)} >
          <div className="coursesectionbox">
            <div className="checkboxgraycontainer">
              <img className="checkboxgray-icon" alt="" src="/checkboxgray.svg" />
            </div>
            <div className="coursesectionnametext">{t.intro_to_pentesting}</div>
          </div>
          <div className="arrowdowncontainer">
            <img className="arrowdownicon" alt="" src="/arrowdownicon.svg" />
          </div>
        </div>
        {isOpenArray[0] && (
          <div className="course-section-dropdown-container">
            <h3 className="course-section-heading">{t.what_is_pentest}</h3>
            <p className="course-section-paragraph">
              {t.pentest} <i>(penetration testing)</i> – {t.pentest_is}
            </p>
            <img className="image"
              loading="lazy"
              alt=""
              src="/pentest.png"
            />

            <p className="course-section-paragraph">
              {t.pentest_is_simulation}
            </p>

            <hr />

            <h3 className="course-section-heading">{t.main_pentest_types}</h3>

            <p className="course-section-paragraph">
              {t.internal_pentest}
            </p>

            <p className="course-section-paragraph">
              {t.external_pentest}
            </p>

            <img className="image"
              loading="lazy"
              alt=""
              src="/pentest_types.png"
            />

            <p className="course-section-paragraph">
              {t.social_pentest}
            </p>

            <div className="questions-container">
              <div className="questions-heading">
                {t.tasks}
              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question0}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[0]}
                    onChange={(e) => handleAnswerChange(0, e.target.value)}
                    disabled={isDisabled(0)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(0)}
                    disabled={isDisabled(0)}
                    style={getButtonStyle(0)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(0)}
                    >{getButtonText(0)}</div>
                  </button>
                </div>
              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question1}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[1]}
                    onChange={(e) => handleAnswerChange(1, e.target.value)}
                    disabled={isDisabled(1)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(1)}
                    disabled={isDisabled(1)}
                    style={getButtonStyle(1)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(1)}
                    >{getButtonText(1)}</div>
                  </button>
                </div>
              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question2}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[2]}
                    onChange={(e) => handleAnswerChange(2, e.target.value)}
                    disabled={isDisabled(2)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(2)}
                    disabled={isDisabled(2)}
                    style={getButtonStyle(2)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(2)}
                    >{getButtonText(2)}</div>
                  </button>
                </div>
              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question3}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[3]}
                    onChange={(e) => handleAnswerChange(3, e.target.value)}
                    disabled={isDisabled(3)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(3)}
                    disabled={isDisabled(3)}
                    style={getButtonStyle(3)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(3)}
                    >{getButtonText(3)}</div>
                  </button>
                </div>
              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question4}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[4]}
                    onChange={(e) => handleAnswerChange(4, e.target.value)}
                    disabled={isDisabled(4)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(4)}
                    disabled={isDisabled(4)}
                    style={getButtonStyle(4)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(4)}
                    >{getButtonText(4)}</div>
                  </button>
                </div>
              </div>

            </div>
          </div>
        )}

        <div className="coursesectioncontainer" onClick={() => toggleSection(1)}>
          <div className="coursesectionbox">
            <div className="checkboxgraycontainer">
              <img
                className="checkboxgray-icon1"
                alt=""
                src="/checkboxgray.svg"
              />
            </div>
            <div className="coursesectionnametext">{t.pentesting_tools}</div>
          </div>
          <div className="arrowdowncontainer">
            <img className="arrowdownicon" alt="" src="/arrowdownicon.svg" />
          </div>
        </div>
        {isOpenArray[1] && (
          <div className="course-section-dropdown-container">
            <h3 className="course-section-heading">{t.pentesting_tools}</h3>
            <p className="course-section-paragraph">
              {t.pentesting_tools_description}
            </p>

            <p className="course-section-paragraph">
              {t.pentesting_main_tools}
              <ul>
                <li>👁️<b>Nmap</b> <i>(Network Mapper)</i> – {t.nmap_description}</li>
                <li>🛡️<b>Metasploit</b> – {t.metasploit_description}</li>
                <li>🦈<b>Wireshark</b> – {t.wireshark_description}</li>
                <li>🟠<b>Burp Suite</b> – {t.burp_suite_description}</li>
                <li>🎩<b>John the Ripper</b> – {t.john_the_ripper}</li>
              </ul>
              {t.tools_description_summary}
            </p>

            <hr />

            <h3 className="course-section-heading">{t.nmap_instrument}</h3>

            <p className="course-section-paragraph">
              {t.nmap_tool}
              <br />{t.nmap_install} <a href="https://nmap.org/download">https://nmap.org/download</a>
            </p>

            <img className="image2-icon"
              loading="lazy"
              alt=""
              src="/nmap.png"
            />

            <h3 className="course-section-heading">{t.nmap_commands}</h3>

            <p className="course-section-paragraph">
              {t.nmap_commands_list}
              <ul>
                <li><span className="highlights">nmap -h</span> - {t.nmap_h}</li>
                <li><span className="highlights">nmap -sn</span> - {t.nmap_sn}</li>
                <li><span className="highlights">nmap -sS</span> - {t.nmap_ss}</li>
                <li><span className="highlights">nmap -A</span> - {t.nmap_A}</li>
              </ul>
            </p>

            <div className="questions-container">
              <div className="questions-heading">{t.tasks}</div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question5}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[5]}
                    onChange={(e) => handleAnswerChange(5, e.target.value)}
                    disabled={isDisabled(5)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(5)}
                    disabled={isDisabled(5)}
                    style={getButtonStyle(5)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(5)}
                    >{getButtonText(5)}</div>
                  </button>
                </div>


              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question6}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[6]}
                    onChange={(e) => handleAnswerChange(6, e.target.value)}
                    disabled={isDisabled(6)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(6)}
                    disabled={isDisabled(6)}
                    style={getButtonStyle(6)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(6)}
                    >{getButtonText(6)}</div>
                  </button>
                </div>


              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question7}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[7]}
                    onChange={(e) => handleAnswerChange(7, e.target.value)}
                    disabled={isDisabled(7)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(7)}
                    disabled={isDisabled(7)}
                    style={getButtonStyle(7)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(7)}
                    >{getButtonText(7)}</div>
                  </button>
                </div>


              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question8}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[8]}
                    onChange={(e) => handleAnswerChange(8, e.target.value)}
                    disabled={isDisabled(8)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(8)}
                    disabled={isDisabled(8)}
                    style={getButtonStyle(8)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(8)}
                    >{getButtonText(8)}</div>
                  </button>
                </div>


              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question9}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[9]}
                    onChange={(e) => handleAnswerChange(9, e.target.value)}
                    disabled={isDisabled(9)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(9)}
                    disabled={isDisabled(9)}
                    style={getButtonStyle(9)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(9)}
                    >{getButtonText(9)}</div>
                  </button>
                </div>


              </div>

            </div>
          </div>
        )}

        <div className="coursesectioncontainer" onClick={() => toggleSection(2)}>
          <div className="coursesectionbox">
            <div className="checkboxgraycontainer">
              <img
                className="checkboxgray-icon1"
                alt=""
                src="/checkboxgray.svg"
              />
            </div>
            <div className="coursesectionnametext">
              {t.scanning_and_collecting}
            </div>
          </div>
          <div className="arrowdowncontainer">
            <img className="arrowdownicon" alt="" src="/arrowdownicon.svg" />
          </div>
        </div>
        {isOpenArray[2] && (
          <div className="course-section-dropdown-container">
            <p className="course-section-paragraph">
              {t.scanning_description}
            </p>

            <p className="course-section-paragraph">
              {t.methods_of_collecting}
            </p>

            <p className="course-section-paragraph">
              🔭<b>{t.passive_recon}</b> - {t.passive_recon_description}
            </p>

            <img className="image2-icon"
              loading="lazy"
              alt=""
              src="/passive.png"
            />

            <p className="course-section-paragraph">
              {t.passive_recon_examples}
            </p>

            <p className="course-section-paragraph">
              🔐<b>{t.active_recon}</b> - {t.active_recon_description}
            </p>

            <img className="image2-icon"
              loading="lazy"
              alt=""
              src="/active.png"
            />

            <p className="course-section-paragraph">
              {t.active_recon_examples}
            </p>

            <div className="questions-container">
              <div className="questions-heading">{t.tasks}</div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question10}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[10]}
                    onChange={(e) => handleAnswerChange(10, e.target.value)}
                    disabled={isDisabled(10)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(10)}
                    disabled={isDisabled(10)}
                    style={getButtonStyle(10)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(10)}
                    >{getButtonText(10)}</div>
                  </button>
                </div>

              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question11}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[11]}
                    onChange={(e) => handleAnswerChange(11, e.target.value)}
                    disabled={isDisabled(11)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(11)}
                    disabled={isDisabled(11)}
                    style={getButtonStyle(11)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(11)}
                    >{getButtonText(11)}</div>
                  </button>
                </div>

              </div>

            </div>
          </div>
        )}

        <div className="coursesectioncontainer" onClick={() => toggleSection(3)}>
          <div className="coursesectionbox">
            <div className="checkboxgraycontainer">
              <img
                className="checkboxgray-icon1"
                alt=""
                src="/checkboxgray.svg"
              />
            </div>
            <div className="coursesectionnametext">{t.passive_recon_instruments}</div>
          </div>
          <div className="arrowdowncontainer">
            <img className="arrowdownicon" alt="" src="/arrowdownicon.svg" />
          </div>
        </div>
        {isOpenArray[3] && (
          <div className="course-section-dropdown-container">

            <h3 className="course-section-heading">WHOIS</h3>

            <p className="course-section-paragraph">
              ❓<b>Whois</b> - {t.whois_description}
            </p>

            <p className="course-section-paragraph">
              {t.whois_command_list}
              <ul>
                <li><span className="highlights">whois ({t.domain})</span> -  {t.whois_domain}</li>
                <li><span className="highlights">whois -v ({t.domain})</span> - {t.whois_v}</li>
                <li><span className="highlights">whois (IP)</span> - {t.whois_ip}</li>
                <li><span className="highlights">whois -h whois.verisign-grs.com ({t.domain})</span> - {t.whois_h}</li>
                <li><span className="highlights">whois ({t.domain}) | grep 'Registrar'</span> -  {t.whois_grep}</li>
              </ul>
            </p>

            <h3 className="course-section-heading">{t.whois_examples}</h3>

            <p className="course-section-paragraph">
              {t.whois_example1} <span className="highlights">whois astanait.edu.kz</span>.
            </p>

            <img className="image-big"
              loading="lazy"
              alt=""
              src="/whois.png"
            />

            <p className="course-section-paragraph">
              {t.whois_example_result}
            </p>
            <hr />
            <h3 className="course-section-heading">Shodan</h3>

            <p className="course-section-paragraph">
              🌐<b>Shodan</b> - {t.shodan_description}
            </p>

            <p className="course-section-paragraph">
              {t.shodan_functions_list}
              <ul>
                <li>{t.shodan_key_words}</li>
                <li>{t.shodan_IP}</li>
                <li>{t.shodan_port}</li>
              </ul>
            </p>

            <img className="image-big"
              loading="lazy"
              alt=""
              src="/shodan.png"
            />


            <div className="questions-container">
              <div className="questions-heading">{t.tasks}</div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question12}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[12]}
                    onChange={(e) => handleAnswerChange(12, e.target.value)}
                    disabled={isDisabled(12)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(12)}
                    disabled={isDisabled(12)}
                    style={getButtonStyle(12)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(12)}
                    >{getButtonText(12)}</div>
                  </button>
                </div>

              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question13}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[13]}
                    onChange={(e) => handleAnswerChange(13, e.target.value)}
                    disabled={isDisabled(13)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(13)}
                    disabled={isDisabled(13)}
                    style={getButtonStyle(13)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(13)}
                    >{getButtonText(13)}</div>
                  </button>
                </div>

              </div>

              <div className="question-box-container">
                <div className="question-text">
                  <a href="www.shodan.io">Shodan.io</a> {t.question14}
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[14]}
                    onChange={(e) => handleAnswerChange(14, e.target.value)}
                    disabled={isDisabled(14)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(14)}
                    disabled={isDisabled(14)}
                    style={getButtonStyle(14)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(14)}
                    >{getButtonText(14)}</div>
                  </button>
                </div>

              </div>

            </div>
          </div>
        )}

        <div className="coursesectioncontainer" onClick={() => toggleSection(4)}>
          <div className="coursesectionbox">
            <div className="checkboxgraycontainer">
              <img
                className="checkboxgray-icon1"
                alt=""
                src="/checkboxgray.svg"
              />
            </div>
            <div className="coursesectionnametext">{t.sql_injections}</div>
          </div>
          <div className="arrowdowncontainer">
            <img className="arrowdownicon" alt="" src="/arrowdownicon.svg" />
          </div>
        </div>
        {isOpenArray[4] && (
          <div className="course-section-dropdown-container">

            <h3 className="course-section-heading">{t.sql_injections}</h3>

            <p className="course-section-paragraph">
              {t.sql_injections_description}
            </p>

            <h3 className="course-section-heading">{t.sql_injections_examples}</h3>

            <p className="course-section-paragraph">
              {t.sql_injections_example1}
              <ul>
                <li><span className="highlights">SELECT * FROM users WHERE username = 'admin' AND password = 'password123';</span></li>
              </ul>
              {t.sql_injections_example1_2}
              <ul>
                <li><span className="highlights">SELECT * FROM users WHERE username = 'admin' <span className="gray-comment">'-- AND password = 'password123';</span></span></li>
              </ul>
              {t.sql_injections_example1_3}
              <ul>
                <li><span className="highlights">SELECT * FROM users WHERE username = 'admin';</span></li>
              </ul>
              {t.sql_injections_example1_4}
            </p>
            <hr />
            <p className="course-section-paragraph">
              {t.sql_injections_example2}
              <ul>
                <li><span className="highlights">SELECT * FROM users WHERE username = 'admin' AND password = 'password123';</span></li>
              </ul>
              {t.sql_injections_example2_2}
              <ul>
                <li><span className="highlights">SELECT * FROM users WHERE username = 'admin' OR '1'='1' AND password = 'anything';</span></li>
              </ul>
              {t.sql_injections_example2_3}
            </p>

            <hr />

            <h3 className="course-section-heading">Docker</h3>

            <p className="course-section-paragraph">
              {t.docker_description}
            </p>

            <p className="course-section-paragraph">
              {t.docker_install}
              <ul>
                <li><span className="highlights">sudo docker run hello-world</span></li>
              </ul>
              {t.docker_install_link} <a href="https://docs.docker.com/desktop/install/linux-install/">https://docs.docker.com/desktop/install/linux-install/</a>
            </p>

            <div className="questions-container">
              <div className="questions-heading">{t.tasks}</div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question15_1} <a href="http://localhost:8001/">localhost:8001</a>  {t.question15_2}<br />
                  {t.question15_3} <br />
                  
                  <span className="highlights">sudo docker run -d -p 8001:5000 --env USER={student} cyberskillscourse/pentest1</span> <br />
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[15]}
                    onChange={(e) => handleAnswerChange(15, e.target.value)}
                    disabled={isDisabled(15)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(15)}
                    disabled={isDisabled(15)}
                    style={getButtonStyle(15)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(15)}
                    >{getButtonText(15)}</div>
                  </button>
                  <button className="hint-button" onClick={() => showHint(t.hint15)}>
                    <div className="hint-button-text">{t.hint_button}</div>
                  </button>
                </div>

              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question16_1} <a href="http://localhost:8002/">localhost:8002</a> {t.question16_2} <br />
                  {t.question16_3} <br />
                  <span className="highlights">sudo docker run -d -p 8002:5000 --env USER={student} cyberskillscourse/pentest2</span> <br />
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[16]}
                    onChange={(e) => handleAnswerChange(16, e.target.value)}
                    disabled={isDisabled(16)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(16)}
                    disabled={isDisabled(16)}
                    style={getButtonStyle(16)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(16)}
                    >{getButtonText(16)}</div>
                  </button>
                  <button className="hint-button" onClick={() => showHint(t.hint16)}>
                    <div className="hint-button-text">{t.hint_button}</div>
                  </button>
                </div>

              </div>

            </div>
          </div>
        )}

        <div className="coursesectioncontainer" onClick={() => toggleSection(5)}>
          <div className="coursesectionbox">
            <div className="checkboxgraycontainer">
              <img
                className="checkboxgray-icon1"
                alt=""
                src="/checkboxgray.svg"
              />
            </div>
            <div className="coursesectionnametext">{t.authentication_vulnerabilities}</div>
          </div>
          <div className="arrowdowncontainer">
            <img className="arrowdownicon" alt="" src="/arrowdownicon.svg" />
          </div>
        </div>
        {isOpenArray[5] && (
          <div className="course-section-dropdown-container">

            <h3 className="course-section-heading">{t.authentication_vulnerabilities}</h3>

            <p className="course-section-paragraph">
              {t.authentication_vulnerabilities_description}
            </p>

            <h3 className="course-section-heading">Brute Forcing</h3>

            <p className="course-section-paragraph">
              Brute Forcing - {t.brute_force_desc}
            </p>

            <h3 className="course-section-heading">Burp Suite</h3>

            <p className="course-section-paragraph">
              {t.burp_suite_desc} <a href="https://portswigger.net/burp/communitydownload">https://portswigger.net/burp/communitydownload</a>
            </p>

            <p className="course-section-paragraph">
              {t.burp_suite_func_list}
              <ol>
                <li><b>Proxy:</b> {t.proxy_desc}</li>
                <li><b>Repeater:</b> {t.repeater_desc}</li>
                <li><b>Intruder:</b> {t.intruder_desc}</li>
              </ol>
              {t.burp_suite_list_sum}
            </p>
            <hr />
            <h3 className="course-section-heading">{t.brute_forcing_in_burp_suite}</h3>

            <p className="course-section-paragraph">
              {t.brute_force_example_list}
              <ol>
                <li>{t.brute_force_example_1}</li>
                <img className="image-big"
                  loading="lazy"
                  alt=""
                  src="/target.png"
                />

                <li>{t.brute_force_example_2}</li>
                <img className="image-big"
                  loading="lazy"
                  alt=""
                  src="/proxy_intercept.png"
                />

                <li>{t.brute_force_example_3}</li>
                <img className="image-big"
                  loading="lazy"
                  alt=""
                  src="/repeater intercept.png"
                />

                <li>{t.brute_force_example_4}</li>
                <img className="image-big"
                  loading="lazy"
                  alt=""
                  src="/intruder_payload.png"
                />

                <li>{t.brute_force_example_5}</li>
                <img className="image-big"
                  loading="lazy"
                  alt=""
                  src="/payloads.png"
                />
              </ol>
            </p>

            <p className="course-section-paragraph">
              <ul>
                {t.brute_force_answers_list}
                <li>{t.brute_force_answer_1}</li>
                <li>{t.brute_force_answer_2}</li>
                <li>{t.brute_force_answer_3}</li>
                <li>{t.brute_force_answer_4}</li>
              </ul>
            </p>

            <div className="questions-container">
              <div className="questions-heading">{t.tasks}</div>

              <div className="question-text">
                {t.question17_links} <a href="https://github.com/DXSKULL/Authentication-Data/blob/main/Passwords.txt">{t.passwords_links}</a>,  <a href="https://github.com/DXSKULL/Authentication-Data/blob/main/Usernames.txt">{t.users_links}</a>.
              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question17_1} <a href="http://localhost:8003/">localhost:8003</a> {t.question17_2} <br />
                  {t.question17_3} <br />
                  <span className="highlights">sudo docker run -d -p 8003:5000 --env USER={student} cyberskillscourse/pentest3</span> <br />
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[17]}
                    onChange={(e) => handleAnswerChange(17, e.target.value)}
                    disabled={isDisabled(17)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(17)}
                    disabled={isDisabled(17)}
                    style={getButtonStyle(17)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(17)}
                    >{getButtonText(17)}</div>
                  </button>
                </div>

              </div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question18_1} <a href="http://localhost:8004/">localhost:8004</a> {t.question18_2} <br />
                  {t.question18_3} <br />
                  <span className="highlights">sudo docker run -d -p 8004:5000 --env USER={student} cyberskillscourse/pentest4</span> <br />
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[18]}
                    onChange={(e) => handleAnswerChange(18, e.target.value)}
                    disabled={isDisabled(18)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(18)}
                    disabled={isDisabled(18)}
                    style={getButtonStyle(18)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(18)}
                    >{getButtonText(18)}</div>
                  </button>
                  <button className="hint-button" onClick={() => showHint(t.hint18)}>
                    <div className="hint-button-text">{t.hint_button}</div>
                  </button>
                </div>

              </div>

            </div>
          </div>
        )}

        <div className="coursesectioncontainer" onClick={() => toggleSection(6)}>
          <div className="coursesectionbox">
            <div className="checkboxgraycontainer">
              <img
                className="checkboxgray-icon1"
                alt=""
                src="/checkboxgray.svg"
              />
            </div>
            <div className="coursesectionnametext">{t.xss}</div>
          </div>
          <div className="arrowdowncontainer">
            <img className="arrowdownicon" alt="" src="/arrowdownicon.svg" />
          </div>
        </div>
        {isOpenArray[6] && (
          <div className="course-section-dropdown-container">

            <h3 className="course-section-heading">{t.xss}</h3>

            <p className="course-section-paragraph">
              {t.xss} - {t.xss_desc}
            </p>

            <p className="course-section-paragraph">
              {t.xss_type_list}
              <ul>
                <li>{t.reflected_xss}</li>
                <li>{t.stored_xss}</li>
                <li>{t.dom_xss}</li>
              </ul>
            </p>

            <h3 className="course-section-heading">{t.examples}</h3>

            <p className="course-section-paragraph">
              {t.xss_example_1}
              <ul>
                <li><span className="highlights">{xssmessage}</span></li>
              </ul>
              {t.xss_example_1_2}
            </p>
            <hr />
            <p className="course-section-paragraph">
              {t.xss_example_2}
              <ul>
                <li><span className="highlights">{xssmessage1}</span></li>
              </ul>
              {t.xss_example_2_2}
            </p>

            <div className="questions-container">
              <div className="questions-heading">{t.tasks}</div>

              <div className="question-box-container">
                <div className="question-text">
                  {t.question19_1} <a href="http://localhost:8005/">localhost:8005</a> {t.question19_2} <br />
                  <span className="highlights">sudo docker run -d -p 8005:5000 --env USER={student} cyberskillscourse/pentest_xss</span> <br />
                </div>
                <div className="anser-box-container">
                  <input className="answer-box-input-field"
                    placeholder={`${t.placeholder}`}
                    type="text"
                    value={userAnswers[19]}
                    onChange={(e) => handleAnswerChange(19, e.target.value)}
                    disabled={isDisabled(19)}
                  />
                  <button className="submit-button"
                    onClick={() => handleSubmit(19)}
                    disabled={isDisabled(19)}
                    style={getButtonStyle(19)}
                  >
                    <div className="submit-button-text"
                      style={getButtonStyle(19)}
                    >{getButtonText(19)}</div>
                  </button>
                  <button className="hint-button" onClick={() => showHint(t.hint19)}>
                    <div className="hint-button-text">{t.hint_button}</div>
                  </button>
                </div>

              </div>

            </div>
          </div>
        )}
      </main>
      {/* Course sections Container END */}
      {alertVisible && (
        <div className="alert-container">
          <div className="alert-message">{t.incorrect}</div>
        </div>
      )}
      {hintPopupVisible && <HintPopup hint={hintText} onClose={closeHintPopup} />}
      <FooterContainer />
    </div>
  );
};

export default CoursePagePentest;
